datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int         @id @default(autoincrement())
  uuid       String      @unique
  reviews    Review[]
  itemStates ItemState[]
}

model Item {
  id          Int         @id @default(autoincrement())
  objectiveId Int
  tier        Int
  stem        String
  reference   String
  Objective   Objective   @relation(fields: [objectiveId], references: [id])
  states      ItemState[]
  reviews     Review[]
}

model Review {
  id      Int      @id @default(autoincrement())
  userId  Int
  itemId  Int
  ts      DateTime @default(now())
  verdict String
  score   Float
  Item    Item     @relation(fields: [itemId], references: [id])
  User    User     @relation(fields: [userId], references: [id])
}

model ItemState {
  id         Int      @id @default(autoincrement())
  userId     Int
  itemId     Int
  stability  Float
  difficulty Float
  ease       Float
  lastReview DateTime @default(now())
  nextDue    DateTime
  p_recall   Float
  Item       Item     @relation(fields: [itemId], references: [id])
  User       User     @relation(fields: [userId], references: [id])

  @@unique([userId, itemId])
  @@index([nextDue])
}

model ObjectiveState {
  id          Int     @id @default(autoincrement())
  userId      Int
  objectiveId Int
  p_mastery   Float
  mastered    Boolean @default(false)
}

model ClusterState {
  id        Int     @id @default(autoincrement())
  userId    Int
  clusterId Int
  unlocked  Boolean @default(false)
  mastered  Boolean @default(false)
}

model Objective {
  id        Int    @id @default(autoincrement())
  clusterId Int
  text      String
  bloom     String
  items     Item[]
}

model Course {
  id        Int      @id @default(autoincrement())
  title     String
  uploadId  String
  createdAt DateTime @default(now())
}
